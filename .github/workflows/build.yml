
      #########.
     ########",#:
   #########',##".
  ##'##'## .##',##.
   ## ## ## # ##",#.
    ## ## ## ## ##'
     ## ## ## :##
      ## ## ##."

name: Build

on: [push]

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
        if: steps.yarn-cache.outputs.cache-hit != 'true'

  test:
    name: Test
    needs: install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        workspace: [monolite, babel-plugin-monolite]
        node-version: [10.x, 12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Load node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      - run: yarn test
        name: Test ${{ matrix.workspace }}
        working-directory: workspaces/${{ matrix.workspace }}

  build:
    name: Build
    needs: install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        workspace: [monolite, babel-plugin-monolite]
        node-version: [10.x, 12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Load node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      - run: yarn build
        working-directory: workspaces/${{ matrix.workspace }}

      - name: Persist dist directory
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.workspace }}-dist
          path: workspaces/${{ matrix.workspace }}/dist

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, build]

    if: github.ref == 'refs/heads/master'

    strategy:
      matrix:
        workspace: [monolite, babel-plugin-monolite]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Load dist directory
        uses: actions/download-artifact@v1
        with:
          name: ${{ matrix.workspace }}-dist
          path: workspaces/${{ matrix.workspace }}/dist

      - name: Check version update
        id: check
        uses: EndBug/version-check@v1
        with:
          file-name: workspaces/${{ matrix.workspace }}/package.json

      - name: Version update detected
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Version update found: New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'

      - name: Publish package to NPM
        if: steps.check.outputs.changed == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: workspaces/${{ matrix.workspace }}
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          npm config set scope "<@OWNER>"
          npm config list
          npm publish --access public
